plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'together'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all*.exclude module : 'spring-boot-starter-logging'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'


	implementation 'org.slf4j:slf4j-simple:1.7.25'
	implementation 'org.slf4j:slf4j-api:1.7.25'
	//common-logging 제거해서 생긴 오류 제거를 위해 추가
	implementation 'org.slf4j:jcl-over-slf4j:1.7.25'

	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	implementation 'org.mariadb.jdbc:mariadb-java-client'
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.2.2' //jwt
	implementation 'mysql:mysql-connector-java:8.0.29'

	//======================================================




	implementation group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '3.1.3' //원래 jersey 2.34으로 통일
	implementation group: 'org.glassfish.jersey.core', name: 'jersey-common', version: '3.1.3'
	implementation group: 'org.glassfish.jersey.ext', name: 'jersey-entity-filtering', version: '3.1.3'
	implementation group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '3.1.3'
	implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '3.1.3'
	implementation 'org.glassfish.jersey.containers:jersey-container-servlet:3.1.3' //2.34 	//에러 발생해서 추가



	//javax-annotation/Priority 에러 발생해서 추가

	implementation 'jakarta.activation:jakarta.activation-api:2.1.2'
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'


	//Exception in thread "main" java.lang.NoClassDefFoundError: javax/ws/rs/core/Configurable 때문에 추가
	//implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0' //2.1
	implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1' //2.1.1 원래 이거...


}
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.named('test') {
	useJUnitPlatform()
}
